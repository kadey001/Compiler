Grammar

    0 $accept: Program $end

    1 Program: Functions

    2 Functions: %empty
    3          | Function Functions

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    5 Idents: Ident
    6       | Ident COMMA Idents

    7 Ident: IDENT

    8 Statements: %empty
    9           | Statement SEMICOLON Statements

   10 Statement: Var ASSIGN Expression
   11          | IF BoolExpr THEN Statements ENDIF
   12          | IF BoolExpr THEN Statements ELSE Statements ENDIF
   13          | WHILE BoolExpr BEGINLOOP Statements ENDLOOP
   14          | DO BEGINLOOP Statements ENDLOOP WHILE BoolExpr
   15          | FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP
   16          | READ Vars
   17          | WRITE Vars
   18          | CONTINUE
   19          | RETURN Expression

   20 Comparison: EQ
   21           | NEQ
   22           | LT
   23           | GT
   24           | LTE
   25           | GTE

   26 MultiplicativeExpr: Term
   27                   | Term MULT MultiplicativeExpr
   28                   | Term DIV MultiplicativeExpr
   29                   | Term MOD MultiplicativeExpr

   30 Term: Var
   31     | NUMBER
   32     | L_PAREN Expression R_PAREN
   33     | SUB Var
   34     | SUB NUMBER
   35     | SUB L_PAREN Expression R_PAREN
   36     | Ident L_PAREN Expressions R_PAREN

   37 Declarations: %empty
   38             | Declaration SEMICOLON Declarations

   39 Declaration: Idents COLON INTEGER
   40            | Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   41            | Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   42 BoolExpr: RelationAndExpr
   43         | RelationAndExpr OR BoolExpr

   44 RelationAndExpr: RelationExpr
   45                | RelationExpr AND RelationAndExpr

   46 RelationExpr: Expression Comparison Expression
   47             | TRUE
   48             | FALSE
   49             | L_PAREN BoolExpr R_PAREN
   50             | NOT Expression Comparison Expression
   51             | NOT TRUE
   52             | NOT FALSE
   53             | NOT L_PAREN BoolExpr R_PAREN

   54 Expressions: %empty
   55            | Expression
   56            | Expression COMMA Expressions

   57 Expression: MultiplicativeExpr
   58           | MultiplicativeExpr ADD Expression
   59           | MultiplicativeExpr SUB Expression

   60 Vars: Var
   61     | Var COMMA Vars

   62 Var: Ident
   63    | Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   64    | Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 4
BEGIN_PARAMS (259) 4
END_PARAMS (260) 4
BEGIN_LOCALS (261) 4
END_LOCALS (262) 4
BEGIN_BODY (263) 4
END_BODY (264) 4
INTEGER (265) 39 40 41
ARRAY (266) 40 41
OF (267) 40 41
IF (268) 11 12
THEN (269) 11 12
ENDIF (270) 11 12
ELSE (271) 12
WHILE (272) 13 14
DO (273) 14
FOR (274) 15
BEGINLOOP (275) 13 14 15
ENDLOOP (276) 13 14 15
CONTINUE (277) 18
READ (278) 16
WRITE (279) 17
AND (280) 45
OR (281) 43
NOT (282) 50 51 52 53
TRUE (283) 47 51
FALSE (284) 48 52
RETURN (285) 19
SUB (286) 33 34 35 59
ADD (287) 58
MULT (288) 27
DIV (289) 28
MOD (290) 29
EQ (291) 20
NEQ (292) 21
LT (293) 22
GT (294) 23
LTE (295) 24
GTE (296) 25
IDENT (297) 7
NUMBER (298) 15 31 34 40 41
SEMICOLON (299) 4 9 15 38
COLON (300) 39 40 41
COMMA (301) 6 56 61
L_PAREN (302) 32 35 36 49 53
R_PAREN (303) 32 35 36 49 53
L_SQUARE_BRACKET (304) 40 41 63 64
R_SQUARE_BRACKET (305) 40 41 63 64
ASSIGN (306) 10 15


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1, on right: 0
Functions (54)
    on left: 2 3, on right: 1 3
Function (55)
    on left: 4, on right: 3
Idents (56)
    on left: 5 6, on right: 6 39 40 41
Ident (57)
    on left: 7, on right: 4 5 6 36 62 63 64
Statements (58)
    on left: 8 9, on right: 4 9 11 12 13 14 15
Statement (59)
    on left: 10 11 12 13 14 15 16 17 18 19, on right: 9
Comparison (60)
    on left: 20 21 22 23 24 25, on right: 46 50
MultiplicativeExpr (61)
    on left: 26 27 28 29, on right: 27 28 29 57 58 59
Term (62)
    on left: 30 31 32 33 34 35 36, on right: 26 27 28 29
Declarations (63)
    on left: 37 38, on right: 4 38
Declaration (64)
    on left: 39 40 41, on right: 38
BoolExpr (65)
    on left: 42 43, on right: 11 12 13 14 15 43 49 53
RelationAndExpr (66)
    on left: 44 45, on right: 42 43 45
RelationExpr (67)
    on left: 46 47 48 49 50 51 52 53, on right: 44 45
Expressions (68)
    on left: 54 55 56, on right: 36 56
Expression (69)
    on left: 57 58 59, on right: 10 15 19 32 35 46 50 55 56 58 59 63
    64
Vars (70)
    on left: 60 61, on right: 16 17 61
Var (71)
    on left: 62 63 64, on right: 10 15 30 33 60 61


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Program    go to state 2
    Functions  go to state 3
    Function   go to state 4


State 1

    4 Function: FUNCTION . Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    Ident  go to state 6


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 7


State 3

    1 Program: Functions .

    $default  reduce using rule 1 (Program)


State 4

    3 Functions: Function . Functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 2 (Functions)

    Functions  go to state 8
    Function   go to state 4


State 5

    7 Ident: IDENT .

    $default  reduce using rule 7 (Ident)


State 6

    4 Function: FUNCTION Ident . SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    SEMICOLON  shift, and go to state 9


State 7

    0 $accept: Program $end .

    $default  accept


State 8

    3 Functions: Function Functions .

    $default  reduce using rule 3 (Functions)


State 9

    4 Function: FUNCTION Ident SEMICOLON . BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_PARAMS  shift, and go to state 10


State 10

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS . Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 37 (Declarations)

    Idents        go to state 11
    Ident         go to state 12
    Declarations  go to state 13
    Declaration   go to state 14


State 11

   39 Declaration: Idents . COLON INTEGER
   40            | Idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   41            | Idents . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 15


State 12

    5 Idents: Ident .
    6       | Ident . COMMA Idents

    COMMA  shift, and go to state 16

    $default  reduce using rule 5 (Idents)


State 13

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations . END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    END_PARAMS  shift, and go to state 17


State 14

   38 Declarations: Declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 18


State 15

   39 Declaration: Idents COLON . INTEGER
   40            | Idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   41            | Idents COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 19
    ARRAY    shift, and go to state 20


State 16

    6 Idents: Ident COMMA . Idents

    IDENT  shift, and go to state 5

    Idents  go to state 21
    Ident   go to state 12


State 17

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS . BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_LOCALS  shift, and go to state 22


State 18

   38 Declarations: Declaration SEMICOLON . Declarations

    IDENT  shift, and go to state 5

    $default  reduce using rule 37 (Declarations)

    Idents        go to state 11
    Ident         go to state 12
    Declarations  go to state 23
    Declaration   go to state 14


State 19

   39 Declaration: Idents COLON INTEGER .

    $default  reduce using rule 39 (Declaration)


State 20

   40 Declaration: Idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   41            | Idents COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 21

    6 Idents: Ident COMMA Idents .

    $default  reduce using rule 6 (Idents)


State 22

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS . Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 5

    $default  reduce using rule 37 (Declarations)

    Idents        go to state 11
    Ident         go to state 12
    Declarations  go to state 25
    Declaration   go to state 14


State 23

   38 Declarations: Declaration SEMICOLON Declarations .

    $default  reduce using rule 38 (Declarations)


State 24

   40 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   41            | Idents COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations . END_LOCALS BEGIN_BODY Statements END_BODY

    END_LOCALS  shift, and go to state 27


State 26

   40 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   41            | Idents COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS . BEGIN_BODY Statements END_BODY

    BEGIN_BODY  shift, and go to state 29


State 28

   40 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   41            | Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 30
    L_SQUARE_BRACKET  shift, and go to state 31


State 29

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY . Statements END_BODY

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Ident       go to state 40
    Statements  go to state 41
    Statement   go to state 42
    Var         go to state 43


State 30

   40 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 44


State 31

   41 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 45


State 32

   11 Statement: IF . BoolExpr THEN Statements ENDIF
   12          | IF . BoolExpr THEN Statements ELSE Statements ENDIF

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    BoolExpr            go to state 55
    RelationAndExpr     go to state 56
    RelationExpr        go to state 57
    Expression          go to state 58
    Var                 go to state 59


State 33

   13 Statement: WHILE . BoolExpr BEGINLOOP Statements ENDLOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    BoolExpr            go to state 60
    RelationAndExpr     go to state 56
    RelationExpr        go to state 57
    Expression          go to state 58
    Var                 go to state 59


State 34

   14 Statement: DO . BEGINLOOP Statements ENDLOOP WHILE BoolExpr

    BEGINLOOP  shift, and go to state 61


State 35

   15 Statement: FOR . Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    IDENT  shift, and go to state 5

    Ident  go to state 40
    Var    go to state 62


State 36

   18 Statement: CONTINUE .

    $default  reduce using rule 18 (Statement)


State 37

   16 Statement: READ . Vars

    IDENT  shift, and go to state 5

    Ident  go to state 40
    Vars   go to state 63
    Var    go to state 64


State 38

   17 Statement: WRITE . Vars

    IDENT  shift, and go to state 5

    Ident  go to state 40
    Vars   go to state 65
    Var    go to state 64


State 39

   19 Statement: RETURN . Expression

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 67
    Var                 go to state 59


State 40

   62 Var: Ident .
   63    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   64    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 62 (Var)


State 41

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements . END_BODY

    END_BODY  shift, and go to state 69


State 42

    9 Statements: Statement . SEMICOLON Statements

    SEMICOLON  shift, and go to state 70


State 43

   10 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 71


State 44

   40 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 40 (Declaration)


State 45

   41 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 72


State 46

   50 RelationExpr: NOT . Expression Comparison Expression
   51             | NOT . TRUE
   52             | NOT . FALSE
   53             | NOT . L_PAREN BoolExpr R_PAREN

    TRUE     shift, and go to state 73
    FALSE    shift, and go to state 74
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 75

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 76
    Var                 go to state 59


State 47

   47 RelationExpr: TRUE .

    $default  reduce using rule 47 (RelationExpr)


State 48

   48 RelationExpr: FALSE .

    $default  reduce using rule 48 (RelationExpr)


State 49

   33 Term: SUB . Var
   34     | SUB . NUMBER
   35     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 77
    L_PAREN  shift, and go to state 78

    Ident  go to state 40
    Var    go to state 79


State 50

   31 Term: NUMBER .

    $default  reduce using rule 31 (Term)


State 51

   32 Term: L_PAREN . Expression R_PAREN
   49 RelationExpr: L_PAREN . BoolExpr R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    BoolExpr            go to state 80
    RelationAndExpr     go to state 56
    RelationExpr        go to state 57
    Expression          go to state 81
    Var                 go to state 59


State 52

   36 Term: Ident . L_PAREN Expressions R_PAREN
   62 Var: Ident .
   63    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   64    | Ident . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 82
    L_SQUARE_BRACKET  shift, and go to state 68

    $default  reduce using rule 62 (Var)


State 53

   57 Expression: MultiplicativeExpr .
   58           | MultiplicativeExpr . ADD Expression
   59           | MultiplicativeExpr . SUB Expression

    SUB  shift, and go to state 83
    ADD  shift, and go to state 84

    $default  reduce using rule 57 (Expression)


State 54

   26 MultiplicativeExpr: Term .
   27                   | Term . MULT MultiplicativeExpr
   28                   | Term . DIV MultiplicativeExpr
   29                   | Term . MOD MultiplicativeExpr

    MULT  shift, and go to state 85
    DIV   shift, and go to state 86
    MOD   shift, and go to state 87

    $default  reduce using rule 26 (MultiplicativeExpr)


State 55

   11 Statement: IF BoolExpr . THEN Statements ENDIF
   12          | IF BoolExpr . THEN Statements ELSE Statements ENDIF

    THEN  shift, and go to state 88


State 56

   42 BoolExpr: RelationAndExpr .
   43         | RelationAndExpr . OR BoolExpr

    OR  shift, and go to state 89

    $default  reduce using rule 42 (BoolExpr)


State 57

   44 RelationAndExpr: RelationExpr .
   45                | RelationExpr . AND RelationAndExpr

    AND  shift, and go to state 90

    $default  reduce using rule 44 (RelationAndExpr)


State 58

   46 RelationExpr: Expression . Comparison Expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94
    LTE  shift, and go to state 95
    GTE  shift, and go to state 96

    Comparison  go to state 97


State 59

   30 Term: Var .

    $default  reduce using rule 30 (Term)


State 60

   13 Statement: WHILE BoolExpr . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 98


State 61

   14 Statement: DO BEGINLOOP . Statements ENDLOOP WHILE BoolExpr

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Ident       go to state 40
    Statements  go to state 99
    Statement   go to state 42
    Var         go to state 43


State 62

   15 Statement: FOR Var . ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    ASSIGN  shift, and go to state 100


State 63

   16 Statement: READ Vars .

    $default  reduce using rule 16 (Statement)


State 64

   60 Vars: Var .
   61     | Var . COMMA Vars

    COMMA  shift, and go to state 101

    $default  reduce using rule 60 (Vars)


State 65

   17 Statement: WRITE Vars .

    $default  reduce using rule 17 (Statement)


State 66

   32 Term: L_PAREN . Expression R_PAREN

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 102
    Var                 go to state 59


State 67

   19 Statement: RETURN Expression .

    $default  reduce using rule 19 (Statement)


State 68

   63 Var: Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET
   64    | Ident L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 103
    Var                 go to state 59


State 69

    4 Function: FUNCTION Ident SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY .

    $default  reduce using rule 4 (Function)


State 70

    9 Statements: Statement SEMICOLON . Statements

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Ident       go to state 40
    Statements  go to state 104
    Statement   go to state 42
    Var         go to state 43


State 71

   10 Statement: Var ASSIGN . Expression

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 105
    Var                 go to state 59


State 72

   41 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 106


State 73

   51 RelationExpr: NOT TRUE .

    $default  reduce using rule 51 (RelationExpr)


State 74

   52 RelationExpr: NOT FALSE .

    $default  reduce using rule 52 (RelationExpr)


State 75

   32 Term: L_PAREN . Expression R_PAREN
   53 RelationExpr: NOT L_PAREN . BoolExpr R_PAREN

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    BoolExpr            go to state 107
    RelationAndExpr     go to state 56
    RelationExpr        go to state 57
    Expression          go to state 81
    Var                 go to state 59


State 76

   50 RelationExpr: NOT Expression . Comparison Expression

    EQ   shift, and go to state 91
    NEQ  shift, and go to state 92
    LT   shift, and go to state 93
    GT   shift, and go to state 94
    LTE  shift, and go to state 95
    GTE  shift, and go to state 96

    Comparison  go to state 108


State 77

   34 Term: SUB NUMBER .

    $default  reduce using rule 34 (Term)


State 78

   35 Term: SUB L_PAREN . Expression R_PAREN

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 109
    Var                 go to state 59


State 79

   33 Term: SUB Var .

    $default  reduce using rule 33 (Term)


State 80

   49 RelationExpr: L_PAREN BoolExpr . R_PAREN

    R_PAREN  shift, and go to state 110


State 81

   32 Term: L_PAREN Expression . R_PAREN
   46 RelationExpr: Expression . Comparison Expression

    EQ       shift, and go to state 91
    NEQ      shift, and go to state 92
    LT       shift, and go to state 93
    GT       shift, and go to state 94
    LTE      shift, and go to state 95
    GTE      shift, and go to state 96
    R_PAREN  shift, and go to state 111

    Comparison  go to state 97


State 82

   36 Term: Ident L_PAREN . Expressions R_PAREN

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    $default  reduce using rule 54 (Expressions)

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expressions         go to state 112
    Expression          go to state 113
    Var                 go to state 59


State 83

   59 Expression: MultiplicativeExpr SUB . Expression

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 114
    Var                 go to state 59


State 84

   58 Expression: MultiplicativeExpr ADD . Expression

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 115
    Var                 go to state 59


State 85

   27 MultiplicativeExpr: Term MULT . MultiplicativeExpr

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 116
    Term                go to state 54
    Var                 go to state 59


State 86

   28 MultiplicativeExpr: Term DIV . MultiplicativeExpr

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 117
    Term                go to state 54
    Var                 go to state 59


State 87

   29 MultiplicativeExpr: Term MOD . MultiplicativeExpr

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 118
    Term                go to state 54
    Var                 go to state 59


State 88

   11 Statement: IF BoolExpr THEN . Statements ENDIF
   12          | IF BoolExpr THEN . Statements ELSE Statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Ident       go to state 40
    Statements  go to state 119
    Statement   go to state 42
    Var         go to state 43


State 89

   43 BoolExpr: RelationAndExpr OR . BoolExpr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    BoolExpr            go to state 120
    RelationAndExpr     go to state 56
    RelationExpr        go to state 57
    Expression          go to state 58
    Var                 go to state 59


State 90

   45 RelationAndExpr: RelationExpr AND . RelationAndExpr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    RelationAndExpr     go to state 121
    RelationExpr        go to state 57
    Expression          go to state 58
    Var                 go to state 59


State 91

   20 Comparison: EQ .

    $default  reduce using rule 20 (Comparison)


State 92

   21 Comparison: NEQ .

    $default  reduce using rule 21 (Comparison)


State 93

   22 Comparison: LT .

    $default  reduce using rule 22 (Comparison)


State 94

   23 Comparison: GT .

    $default  reduce using rule 23 (Comparison)


State 95

   24 Comparison: LTE .

    $default  reduce using rule 24 (Comparison)


State 96

   25 Comparison: GTE .

    $default  reduce using rule 25 (Comparison)


State 97

   46 RelationExpr: Expression Comparison . Expression

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 122
    Var                 go to state 59


State 98

   13 Statement: WHILE BoolExpr BEGINLOOP . Statements ENDLOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Ident       go to state 40
    Statements  go to state 123
    Statement   go to state 42
    Var         go to state 43


State 99

   14 Statement: DO BEGINLOOP Statements . ENDLOOP WHILE BoolExpr

    ENDLOOP  shift, and go to state 124


State 100

   15 Statement: FOR Var ASSIGN . NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    NUMBER  shift, and go to state 125


State 101

   61 Vars: Var COMMA . Vars

    IDENT  shift, and go to state 5

    Ident  go to state 40
    Vars   go to state 126
    Var    go to state 64


State 102

   32 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 111


State 103

   63 Var: Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET
   64    | Ident L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 127


State 104

    9 Statements: Statement SEMICOLON Statements .

    $default  reduce using rule 9 (Statements)


State 105

   10 Statement: Var ASSIGN Expression .

    $default  reduce using rule 10 (Statement)


State 106

   41 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 128


State 107

   53 RelationExpr: NOT L_PAREN BoolExpr . R_PAREN

    R_PAREN  shift, and go to state 129


State 108

   50 RelationExpr: NOT Expression Comparison . Expression

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 130
    Var                 go to state 59


State 109

   35 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 131


State 110

   49 RelationExpr: L_PAREN BoolExpr R_PAREN .

    $default  reduce using rule 49 (RelationExpr)


State 111

   32 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 32 (Term)


State 112

   36 Term: Ident L_PAREN Expressions . R_PAREN

    R_PAREN  shift, and go to state 132


State 113

   55 Expressions: Expression .
   56            | Expression . COMMA Expressions

    COMMA  shift, and go to state 133

    $default  reduce using rule 55 (Expressions)


State 114

   59 Expression: MultiplicativeExpr SUB Expression .

    $default  reduce using rule 59 (Expression)


State 115

   58 Expression: MultiplicativeExpr ADD Expression .

    $default  reduce using rule 58 (Expression)


State 116

   27 MultiplicativeExpr: Term MULT MultiplicativeExpr .

    $default  reduce using rule 27 (MultiplicativeExpr)


State 117

   28 MultiplicativeExpr: Term DIV MultiplicativeExpr .

    $default  reduce using rule 28 (MultiplicativeExpr)


State 118

   29 MultiplicativeExpr: Term MOD MultiplicativeExpr .

    $default  reduce using rule 29 (MultiplicativeExpr)


State 119

   11 Statement: IF BoolExpr THEN Statements . ENDIF
   12          | IF BoolExpr THEN Statements . ELSE Statements ENDIF

    ENDIF  shift, and go to state 134
    ELSE   shift, and go to state 135


State 120

   43 BoolExpr: RelationAndExpr OR BoolExpr .

    $default  reduce using rule 43 (BoolExpr)


State 121

   45 RelationAndExpr: RelationExpr AND RelationAndExpr .

    $default  reduce using rule 45 (RelationAndExpr)


State 122

   46 RelationExpr: Expression Comparison Expression .

    $default  reduce using rule 46 (RelationExpr)


State 123

   13 Statement: WHILE BoolExpr BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 136


State 124

   14 Statement: DO BEGINLOOP Statements ENDLOOP . WHILE BoolExpr

    WHILE  shift, and go to state 137


State 125

   15 Statement: FOR Var ASSIGN NUMBER . SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    SEMICOLON  shift, and go to state 138


State 126

   61 Vars: Var COMMA Vars .

    $default  reduce using rule 61 (Vars)


State 127

   63 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .
   64    | Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 139

    $default  reduce using rule 63 (Var)


State 128

   41 Declaration: Idents COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 41 (Declaration)


State 129

   53 RelationExpr: NOT L_PAREN BoolExpr R_PAREN .

    $default  reduce using rule 53 (RelationExpr)


State 130

   50 RelationExpr: NOT Expression Comparison Expression .

    $default  reduce using rule 50 (RelationExpr)


State 131

   35 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 35 (Term)


State 132

   36 Term: Ident L_PAREN Expressions R_PAREN .

    $default  reduce using rule 36 (Term)


State 133

   56 Expressions: Expression COMMA . Expressions

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    $default  reduce using rule 54 (Expressions)

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expressions         go to state 140
    Expression          go to state 113
    Var                 go to state 59


State 134

   11 Statement: IF BoolExpr THEN Statements ENDIF .

    $default  reduce using rule 11 (Statement)


State 135

   12 Statement: IF BoolExpr THEN Statements ELSE . Statements ENDIF

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Ident       go to state 40
    Statements  go to state 141
    Statement   go to state 42
    Var         go to state 43


State 136

   13 Statement: WHILE BoolExpr BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 13 (Statement)


State 137

   14 Statement: DO BEGINLOOP Statements ENDLOOP WHILE . BoolExpr

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    BoolExpr            go to state 142
    RelationAndExpr     go to state 56
    RelationExpr        go to state 57
    Expression          go to state 58
    Var                 go to state 59


State 138

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON . BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    NOT      shift, and go to state 46
    TRUE     shift, and go to state 47
    FALSE    shift, and go to state 48
    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 51

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    BoolExpr            go to state 143
    RelationAndExpr     go to state 56
    RelationExpr        go to state 57
    Expression          go to state 58
    Var                 go to state 59


State 139

   64 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 144
    Var                 go to state 59


State 140

   56 Expressions: Expression COMMA Expressions .

    $default  reduce using rule 56 (Expressions)


State 141

   12 Statement: IF BoolExpr THEN Statements ELSE Statements . ENDIF

    ENDIF  shift, and go to state 145


State 142

   14 Statement: DO BEGINLOOP Statements ENDLOOP WHILE BoolExpr .

    $default  reduce using rule 14 (Statement)


State 143

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr . SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    SEMICOLON  shift, and go to state 146


State 144

   64 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 147


State 145

   12 Statement: IF BoolExpr THEN Statements ELSE Statements ENDIF .

    $default  reduce using rule 12 (Statement)


State 146

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON . Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    IDENT  shift, and go to state 5

    Ident  go to state 40
    Var    go to state 148


State 147

   64 Var: Ident L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 64 (Var)


State 148

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var . ASSIGN Expression BEGINLOOP Statements ENDLOOP

    ASSIGN  shift, and go to state 149


State 149

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN . Expression BEGINLOOP Statements ENDLOOP

    SUB      shift, and go to state 49
    IDENT    shift, and go to state 5
    NUMBER   shift, and go to state 50
    L_PAREN  shift, and go to state 66

    Ident               go to state 52
    MultiplicativeExpr  go to state 53
    Term                go to state 54
    Expression          go to state 150
    Var                 go to state 59


State 150

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 151


State 151

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP . Statements ENDLOOP

    IF        shift, and go to state 32
    WHILE     shift, and go to state 33
    DO        shift, and go to state 34
    FOR       shift, and go to state 35
    CONTINUE  shift, and go to state 36
    READ      shift, and go to state 37
    WRITE     shift, and go to state 38
    RETURN    shift, and go to state 39
    IDENT     shift, and go to state 5

    $default  reduce using rule 8 (Statements)

    Ident       go to state 40
    Statements  go to state 152
    Statement   go to state 42
    Var         go to state 43


State 152

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 153


State 153

   15 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 15 (Statement)

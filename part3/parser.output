State 1 conflicts: 2 shift/reduce
State 5 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | Program Functions

    3 Functions: %empty
    4          | Function Functions

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    6 Statements: %empty
    7           | Statement SEMICOLON Statements

    8 Statement: Var ASSIGN Expression
    9          | IF BoolExpr THEN Statements ENDIF
   10          | IF BoolExpr THEN Statements ELSE Statements ENDIF
   11          | WHILE BoolExpr BEGINLOOP Statements ENDLOOP
   12          | DO BEGINLOOP Statements ENDLOOP WHILE BoolExpr
   13          | FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP
   14          | READ Vars
   15          | WRITE Vars
   16          | CONTINUE
   17          | RETURN

   18 Comparison: EQ
   19           | NEQ
   20           | LT
   21           | GT
   22           | LTE
   23           | GTE

   24 MultiplicativeExpr: Term
   25                   | Term MULT Term
   26                   | Term DIV Term
   27                   | Term MOD Term

   28 Term: Var
   29     | NUMBER
   30     | L_PAREN Expression R_PAREN
   31     | SUB Var
   32     | SUB NUMBER
   33     | SUB L_PAREN Expression R_PAREN
   34     | IDENT L_PAREN Expressions R_PAREN

   35 Declarations: %empty
   36             | Declaration SEMICOLON Declarations

   37 Declaration: IDENT COMMA Declaration
   38            | IDENT COLON INTEGER
   39            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   40            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   41 BoolExpr: RelationAndExpr
   42         | RelationAndExpr OR RelationAndExpr

   43 RelationAndExpr: RelationExpr
   44                | RelationExpr AND RelationExpr

   45 RelationExpr: Expression Comparison Expression
   46             | TRUE
   47             | FALSE
   48             | L_PAREN BoolExpr R_PAREN
   49             | NOT Expression Comparison Expression
   50             | NOT TRUE
   51             | NOT FALSE
   52             | NOT L_PAREN BoolExpr R_PAREN

   53 Expressions: %empty
   54            | Expression COMMA Expressions

   55 Expression: MultiplicativeExpr
   56           | MultiplicativeExpr ADD MultiplicativeExpr
   57           | MultiplicativeExpr SUB MultiplicativeExpr

   58 Vars: %empty
   59     | Var COMMA Vars

   60 Var: IDENT
   61    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   62    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
FUNCTION (258) 5
BEGIN_PARAMS (259) 5
END_PARAMS (260) 5
BEGIN_LOCALS (261) 5
END_LOCALS (262) 5
BEGIN_BODY (263) 5
END_BODY (264) 5
INTEGER (265) 38 39 40
ARRAY (266) 39 40
OF (267) 39 40
IF (268) 9 10
THEN (269) 9 10
ENDIF (270) 9 10
ELSE (271) 10
WHILE (272) 11 12
DO (273) 12
FOR (274) 13
BEGINLOOP (275) 11 12 13
ENDLOOP (276) 11 12 13
CONTINUE (277) 16
READ (278) 14
WRITE (279) 15
AND (280) 44
OR (281) 42
NOT (282) 49 50 51 52
TRUE (283) 46 50
FALSE (284) 47 51
RETURN (285) 17
SUB (286) 31 32 33 57
ADD (287) 56
MULT (288) 25
DIV (289) 26
MOD (290) 27
EQ (291) 18
NEQ (292) 19
LT (293) 20
GT (294) 21
LTE (295) 22
GTE (296) 23
IDENT (297) 5 34 37 38 39 40 60 61 62
NUMBER (298) 13 29 32 39 40
SEMICOLON (299) 5 7 13 36
COLON (300) 38 39 40
COMMA (301) 37 54 59
L_PAREN (302) 30 33 34 48 52
R_PAREN (303) 30 33 34 48 52
L_SQUARE_BRACKET (304) 39 40 61 62
R_SQUARE_BRACKET (305) 39 40 61 62
ASSIGN (306) 8 13


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0 2
Functions (54)
    on left: 3 4, on right: 2 4
Function (55)
    on left: 5, on right: 4
Statements (56)
    on left: 6 7, on right: 5 7 9 10 11 12 13
Statement (57)
    on left: 8 9 10 11 12 13 14 15 16 17, on right: 7
Comparison (58)
    on left: 18 19 20 21 22 23, on right: 45 49
MultiplicativeExpr (59)
    on left: 24 25 26 27, on right: 55 56 57
Term (60)
    on left: 28 29 30 31 32 33 34, on right: 24 25 26 27
Declarations (61)
    on left: 35 36, on right: 5 36
Declaration (62)
    on left: 37 38 39 40, on right: 36 37
BoolExpr (63)
    on left: 41 42, on right: 9 10 11 12 13 48 52
RelationAndExpr (64)
    on left: 43 44, on right: 41 42
RelationExpr (65)
    on left: 45 46 47 48 49 50 51 52, on right: 43 44
Expressions (66)
    on left: 53 54, on right: 34 54
Expression (67)
    on left: 55 56 57, on right: 8 13 30 33 45 49 54 61 62
Vars (68)
    on left: 58 59, on right: 14 15 59
Var (69)
    on left: 60 61 62, on right: 8 13 28 31 59


State 0

    0 $accept: . Program $end

    $default  reduce using rule 1 (Program)

    Program  go to state 1


State 1

    0 $accept: Program . $end
    2 Program: Program . Functions

    $end      shift, and go to state 2
    FUNCTION  shift, and go to state 3

    $end      [reduce using rule 3 (Functions)]
    FUNCTION  [reduce using rule 3 (Functions)]

    Functions  go to state 4
    Function   go to state 5


State 2

    0 $accept: Program $end .

    $default  accept


State 3

    5 Function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 6


State 4

    2 Program: Program Functions .

    $default  reduce using rule 2 (Program)


State 5

    4 Functions: Function . Functions

    FUNCTION  shift, and go to state 3

    FUNCTION  [reduce using rule 3 (Functions)]
    $default  reduce using rule 3 (Functions)

    Functions  go to state 7
    Function   go to state 5


State 6

    5 Function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    SEMICOLON  shift, and go to state 8


State 7

    4 Functions: Function Functions .

    $default  reduce using rule 4 (Functions)


State 8

    5 Function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 35 (Declarations)

    Declarations  go to state 11
    Declaration   go to state 12


State 10

   37 Declaration: IDENT . COMMA Declaration
   38            | IDENT . COLON INTEGER
   39            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   40            | IDENT . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 13
    COMMA  shift, and go to state 14


State 11

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations . END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    END_PARAMS  shift, and go to state 15


State 12

   36 Declarations: Declaration . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 16


State 13

   38 Declaration: IDENT COLON . INTEGER
   39            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   40            | IDENT COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 17
    ARRAY    shift, and go to state 18


State 14

   37 Declaration: IDENT COMMA . Declaration

    IDENT  shift, and go to state 10

    Declaration  go to state 19


State 15

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS . BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    BEGIN_LOCALS  shift, and go to state 20


State 16

   36 Declarations: Declaration SEMICOLON . Declarations

    IDENT  shift, and go to state 10

    $default  reduce using rule 35 (Declarations)

    Declarations  go to state 21
    Declaration   go to state 12


State 17

   38 Declaration: IDENT COLON INTEGER .

    $default  reduce using rule 38 (Declaration)


State 18

   39 Declaration: IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER
   40            | IDENT COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 22


State 19

   37 Declaration: IDENT COMMA Declaration .

    $default  reduce using rule 37 (Declaration)


State 20

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS . Declarations END_LOCALS BEGIN_BODY Statements END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 35 (Declarations)

    Declarations  go to state 23
    Declaration   go to state 12


State 21

   36 Declarations: Declaration SEMICOLON Declarations .

    $default  reduce using rule 36 (Declarations)


State 22

   39 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER
   40            | IDENT COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 24


State 23

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations . END_LOCALS BEGIN_BODY Statements END_BODY

    END_LOCALS  shift, and go to state 25


State 24

   39 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER
   40            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 26


State 25

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS . BEGIN_BODY Statements END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

   39 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER
   40            | IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    OF                shift, and go to state 28
    L_SQUARE_BRACKET  shift, and go to state 29


State 27

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY . Statements END_BODY

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 6 (Statements)

    Statements  go to state 39
    Statement   go to state 40
    Var         go to state 41


State 28

   39 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 42


State 29

   40 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 43


State 30

    9 Statement: IF . BoolExpr THEN Statements ENDIF
   10          | IF . BoolExpr THEN Statements ELSE Statements ENDIF

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    BoolExpr            go to state 53
    RelationAndExpr     go to state 54
    RelationExpr        go to state 55
    Expression          go to state 56
    Var                 go to state 57


State 31

   11 Statement: WHILE . BoolExpr BEGINLOOP Statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    BoolExpr            go to state 58
    RelationAndExpr     go to state 54
    RelationExpr        go to state 55
    Expression          go to state 56
    Var                 go to state 57


State 32

   12 Statement: DO . BEGINLOOP Statements ENDLOOP WHILE BoolExpr

    BEGINLOOP  shift, and go to state 59


State 33

   13 Statement: FOR . Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    IDENT  shift, and go to state 38

    Var  go to state 60


State 34

   16 Statement: CONTINUE .

    $default  reduce using rule 16 (Statement)


State 35

   14 Statement: READ . Vars

    IDENT  shift, and go to state 38

    $default  reduce using rule 58 (Vars)

    Vars  go to state 61
    Var   go to state 62


State 36

   15 Statement: WRITE . Vars

    IDENT  shift, and go to state 38

    $default  reduce using rule 58 (Vars)

    Vars  go to state 63
    Var   go to state 62


State 37

   17 Statement: RETURN .

    $default  reduce using rule 17 (Statement)


State 38

   60 Var: IDENT .
   61    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   62    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 60 (Var)


State 39

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements . END_BODY

    END_BODY  shift, and go to state 65


State 40

    7 Statements: Statement . SEMICOLON Statements

    SEMICOLON  shift, and go to state 66


State 41

    8 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 67


State 42

   39 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 39 (Declaration)


State 43

   40 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 68


State 44

   49 RelationExpr: NOT . Expression Comparison Expression
   50             | NOT . TRUE
   51             | NOT . FALSE
   52             | NOT . L_PAREN BoolExpr R_PAREN

    TRUE     shift, and go to state 69
    FALSE    shift, and go to state 70
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 71

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 72
    Var                 go to state 57


State 45

   46 RelationExpr: TRUE .

    $default  reduce using rule 46 (RelationExpr)


State 46

   47 RelationExpr: FALSE .

    $default  reduce using rule 47 (RelationExpr)


State 47

   31 Term: SUB . Var
   32     | SUB . NUMBER
   33     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 38
    NUMBER   shift, and go to state 73
    L_PAREN  shift, and go to state 74

    Var  go to state 75


State 48

   34 Term: IDENT . L_PAREN Expressions R_PAREN
   60 Var: IDENT .
   61    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET
   62    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 76
    L_SQUARE_BRACKET  shift, and go to state 64

    $default  reduce using rule 60 (Var)


State 49

   29 Term: NUMBER .

    $default  reduce using rule 29 (Term)


State 50

   30 Term: L_PAREN . Expression R_PAREN
   48 RelationExpr: L_PAREN . BoolExpr R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    BoolExpr            go to state 77
    RelationAndExpr     go to state 54
    RelationExpr        go to state 55
    Expression          go to state 78
    Var                 go to state 57


State 51

   55 Expression: MultiplicativeExpr .
   56           | MultiplicativeExpr . ADD MultiplicativeExpr
   57           | MultiplicativeExpr . SUB MultiplicativeExpr

    SUB  shift, and go to state 79
    ADD  shift, and go to state 80

    $default  reduce using rule 55 (Expression)


State 52

   24 MultiplicativeExpr: Term .
   25                   | Term . MULT Term
   26                   | Term . DIV Term
   27                   | Term . MOD Term

    MULT  shift, and go to state 81
    DIV   shift, and go to state 82
    MOD   shift, and go to state 83

    $default  reduce using rule 24 (MultiplicativeExpr)


State 53

    9 Statement: IF BoolExpr . THEN Statements ENDIF
   10          | IF BoolExpr . THEN Statements ELSE Statements ENDIF

    THEN  shift, and go to state 84


State 54

   41 BoolExpr: RelationAndExpr .
   42         | RelationAndExpr . OR RelationAndExpr

    OR  shift, and go to state 85

    $default  reduce using rule 41 (BoolExpr)


State 55

   43 RelationAndExpr: RelationExpr .
   44                | RelationExpr . AND RelationExpr

    AND  shift, and go to state 86

    $default  reduce using rule 43 (RelationAndExpr)


State 56

   45 RelationExpr: Expression . Comparison Expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    Comparison  go to state 93


State 57

   28 Term: Var .

    $default  reduce using rule 28 (Term)


State 58

   11 Statement: WHILE BoolExpr . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 94


State 59

   12 Statement: DO BEGINLOOP . Statements ENDLOOP WHILE BoolExpr

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 6 (Statements)

    Statements  go to state 95
    Statement   go to state 40
    Var         go to state 41


State 60

   13 Statement: FOR Var . ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    ASSIGN  shift, and go to state 96


State 61

   14 Statement: READ Vars .

    $default  reduce using rule 14 (Statement)


State 62

   59 Vars: Var . COMMA Vars

    COMMA  shift, and go to state 97


State 63

   15 Statement: WRITE Vars .

    $default  reduce using rule 15 (Statement)


State 64

   61 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET
   62    | IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 99
    Var                 go to state 57


State 65

    5 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declarations END_PARAMS BEGIN_LOCALS Declarations END_LOCALS BEGIN_BODY Statements END_BODY .

    $default  reduce using rule 5 (Function)


State 66

    7 Statements: Statement SEMICOLON . Statements

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 6 (Statements)

    Statements  go to state 100
    Statement   go to state 40
    Var         go to state 41


State 67

    8 Statement: Var ASSIGN . Expression

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 101
    Var                 go to state 57


State 68

   40 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 102


State 69

   50 RelationExpr: NOT TRUE .

    $default  reduce using rule 50 (RelationExpr)


State 70

   51 RelationExpr: NOT FALSE .

    $default  reduce using rule 51 (RelationExpr)


State 71

   30 Term: L_PAREN . Expression R_PAREN
   52 RelationExpr: NOT L_PAREN . BoolExpr R_PAREN

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    BoolExpr            go to state 103
    RelationAndExpr     go to state 54
    RelationExpr        go to state 55
    Expression          go to state 78
    Var                 go to state 57


State 72

   49 RelationExpr: NOT Expression . Comparison Expression

    EQ   shift, and go to state 87
    NEQ  shift, and go to state 88
    LT   shift, and go to state 89
    GT   shift, and go to state 90
    LTE  shift, and go to state 91
    GTE  shift, and go to state 92

    Comparison  go to state 104


State 73

   32 Term: SUB NUMBER .

    $default  reduce using rule 32 (Term)


State 74

   33 Term: SUB L_PAREN . Expression R_PAREN

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 105
    Var                 go to state 57


State 75

   31 Term: SUB Var .

    $default  reduce using rule 31 (Term)


State 76

   34 Term: IDENT L_PAREN . Expressions R_PAREN

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    $default  reduce using rule 53 (Expressions)

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expressions         go to state 106
    Expression          go to state 107
    Var                 go to state 57


State 77

   48 RelationExpr: L_PAREN BoolExpr . R_PAREN

    R_PAREN  shift, and go to state 108


State 78

   30 Term: L_PAREN Expression . R_PAREN
   45 RelationExpr: Expression . Comparison Expression

    EQ       shift, and go to state 87
    NEQ      shift, and go to state 88
    LT       shift, and go to state 89
    GT       shift, and go to state 90
    LTE      shift, and go to state 91
    GTE      shift, and go to state 92
    R_PAREN  shift, and go to state 109

    Comparison  go to state 93


State 79

   57 Expression: MultiplicativeExpr SUB . MultiplicativeExpr

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 110
    Term                go to state 52
    Var                 go to state 57


State 80

   56 Expression: MultiplicativeExpr ADD . MultiplicativeExpr

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 111
    Term                go to state 52
    Var                 go to state 57


State 81

   25 MultiplicativeExpr: Term MULT . Term

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    Term  go to state 112
    Var   go to state 57


State 82

   26 MultiplicativeExpr: Term DIV . Term

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    Term  go to state 113
    Var   go to state 57


State 83

   27 MultiplicativeExpr: Term MOD . Term

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    Term  go to state 114
    Var   go to state 57


State 84

    9 Statement: IF BoolExpr THEN . Statements ENDIF
   10          | IF BoolExpr THEN . Statements ELSE Statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 6 (Statements)

    Statements  go to state 115
    Statement   go to state 40
    Var         go to state 41


State 85

   42 BoolExpr: RelationAndExpr OR . RelationAndExpr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    RelationAndExpr     go to state 116
    RelationExpr        go to state 55
    Expression          go to state 56
    Var                 go to state 57


State 86

   44 RelationAndExpr: RelationExpr AND . RelationExpr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    RelationExpr        go to state 117
    Expression          go to state 56
    Var                 go to state 57


State 87

   18 Comparison: EQ .

    $default  reduce using rule 18 (Comparison)


State 88

   19 Comparison: NEQ .

    $default  reduce using rule 19 (Comparison)


State 89

   20 Comparison: LT .

    $default  reduce using rule 20 (Comparison)


State 90

   21 Comparison: GT .

    $default  reduce using rule 21 (Comparison)


State 91

   22 Comparison: LTE .

    $default  reduce using rule 22 (Comparison)


State 92

   23 Comparison: GTE .

    $default  reduce using rule 23 (Comparison)


State 93

   45 RelationExpr: Expression Comparison . Expression

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 118
    Var                 go to state 57


State 94

   11 Statement: WHILE BoolExpr BEGINLOOP . Statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 6 (Statements)

    Statements  go to state 119
    Statement   go to state 40
    Var         go to state 41


State 95

   12 Statement: DO BEGINLOOP Statements . ENDLOOP WHILE BoolExpr

    ENDLOOP  shift, and go to state 120


State 96

   13 Statement: FOR Var ASSIGN . NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    NUMBER  shift, and go to state 121


State 97

   59 Vars: Var COMMA . Vars

    IDENT  shift, and go to state 38

    $default  reduce using rule 58 (Vars)

    Vars  go to state 122
    Var   go to state 62


State 98

   30 Term: L_PAREN . Expression R_PAREN

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 123
    Var                 go to state 57


State 99

   61 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET
   62    | IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 124


State 100

    7 Statements: Statement SEMICOLON Statements .

    $default  reduce using rule 7 (Statements)


State 101

    8 Statement: Var ASSIGN Expression .

    $default  reduce using rule 8 (Statement)


State 102

   40 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 125


State 103

   52 RelationExpr: NOT L_PAREN BoolExpr . R_PAREN

    R_PAREN  shift, and go to state 126


State 104

   49 RelationExpr: NOT Expression Comparison . Expression

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 127
    Var                 go to state 57


State 105

   33 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 128


State 106

   34 Term: IDENT L_PAREN Expressions . R_PAREN

    R_PAREN  shift, and go to state 129


State 107

   54 Expressions: Expression . COMMA Expressions

    COMMA  shift, and go to state 130


State 108

   48 RelationExpr: L_PAREN BoolExpr R_PAREN .

    $default  reduce using rule 48 (RelationExpr)


State 109

   30 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 30 (Term)


State 110

   57 Expression: MultiplicativeExpr SUB MultiplicativeExpr .

    $default  reduce using rule 57 (Expression)


State 111

   56 Expression: MultiplicativeExpr ADD MultiplicativeExpr .

    $default  reduce using rule 56 (Expression)


State 112

   25 MultiplicativeExpr: Term MULT Term .

    $default  reduce using rule 25 (MultiplicativeExpr)


State 113

   26 MultiplicativeExpr: Term DIV Term .

    $default  reduce using rule 26 (MultiplicativeExpr)


State 114

   27 MultiplicativeExpr: Term MOD Term .

    $default  reduce using rule 27 (MultiplicativeExpr)


State 115

    9 Statement: IF BoolExpr THEN Statements . ENDIF
   10          | IF BoolExpr THEN Statements . ELSE Statements ENDIF

    ENDIF  shift, and go to state 131
    ELSE   shift, and go to state 132


State 116

   42 BoolExpr: RelationAndExpr OR RelationAndExpr .

    $default  reduce using rule 42 (BoolExpr)


State 117

   44 RelationAndExpr: RelationExpr AND RelationExpr .

    $default  reduce using rule 44 (RelationAndExpr)


State 118

   45 RelationExpr: Expression Comparison Expression .

    $default  reduce using rule 45 (RelationExpr)


State 119

   11 Statement: WHILE BoolExpr BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 133


State 120

   12 Statement: DO BEGINLOOP Statements ENDLOOP . WHILE BoolExpr

    WHILE  shift, and go to state 134


State 121

   13 Statement: FOR Var ASSIGN NUMBER . SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    SEMICOLON  shift, and go to state 135


State 122

   59 Vars: Var COMMA Vars .

    $default  reduce using rule 59 (Vars)


State 123

   30 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 109


State 124

   61 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .
   62    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 136

    $default  reduce using rule 61 (Var)


State 125

   40 Declaration: IDENT COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 40 (Declaration)


State 126

   52 RelationExpr: NOT L_PAREN BoolExpr R_PAREN .

    $default  reduce using rule 52 (RelationExpr)


State 127

   49 RelationExpr: NOT Expression Comparison Expression .

    $default  reduce using rule 49 (RelationExpr)


State 128

   33 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 33 (Term)


State 129

   34 Term: IDENT L_PAREN Expressions R_PAREN .

    $default  reduce using rule 34 (Term)


State 130

   54 Expressions: Expression COMMA . Expressions

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    $default  reduce using rule 53 (Expressions)

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expressions         go to state 137
    Expression          go to state 107
    Var                 go to state 57


State 131

    9 Statement: IF BoolExpr THEN Statements ENDIF .

    $default  reduce using rule 9 (Statement)


State 132

   10 Statement: IF BoolExpr THEN Statements ELSE . Statements ENDIF

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 6 (Statements)

    Statements  go to state 138
    Statement   go to state 40
    Var         go to state 41


State 133

   11 Statement: WHILE BoolExpr BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 11 (Statement)


State 134

   12 Statement: DO BEGINLOOP Statements ENDLOOP WHILE . BoolExpr

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    BoolExpr            go to state 139
    RelationAndExpr     go to state 54
    RelationExpr        go to state 55
    Expression          go to state 56
    Var                 go to state 57


State 135

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON . BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    NOT      shift, and go to state 44
    TRUE     shift, and go to state 45
    FALSE    shift, and go to state 46
    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 50

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    BoolExpr            go to state 140
    RelationAndExpr     go to state 54
    RelationExpr        go to state 55
    Expression          go to state 56
    Var                 go to state 57


State 136

   62 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 141
    Var                 go to state 57


State 137

   54 Expressions: Expression COMMA Expressions .

    $default  reduce using rule 54 (Expressions)


State 138

   10 Statement: IF BoolExpr THEN Statements ELSE Statements . ENDIF

    ENDIF  shift, and go to state 142


State 139

   12 Statement: DO BEGINLOOP Statements ENDLOOP WHILE BoolExpr .

    $default  reduce using rule 12 (Statement)


State 140

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr . SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    SEMICOLON  shift, and go to state 143


State 141

   62 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 144


State 142

   10 Statement: IF BoolExpr THEN Statements ELSE Statements ENDIF .

    $default  reduce using rule 10 (Statement)


State 143

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON . Var ASSIGN Expression BEGINLOOP Statements ENDLOOP

    IDENT  shift, and go to state 38

    Var  go to state 145


State 144

   62 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 62 (Var)


State 145

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var . ASSIGN Expression BEGINLOOP Statements ENDLOOP

    ASSIGN  shift, and go to state 146


State 146

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN . Expression BEGINLOOP Statements ENDLOOP

    SUB      shift, and go to state 47
    IDENT    shift, and go to state 48
    NUMBER   shift, and go to state 49
    L_PAREN  shift, and go to state 98

    MultiplicativeExpr  go to state 51
    Term                go to state 52
    Expression          go to state 147
    Var                 go to state 57


State 147

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression . BEGINLOOP Statements ENDLOOP

    BEGINLOOP  shift, and go to state 148


State 148

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP . Statements ENDLOOP

    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    FOR       shift, and go to state 33
    CONTINUE  shift, and go to state 34
    READ      shift, and go to state 35
    WRITE     shift, and go to state 36
    RETURN    shift, and go to state 37
    IDENT     shift, and go to state 38

    $default  reduce using rule 6 (Statements)

    Statements  go to state 149
    Statement   go to state 40
    Var         go to state 41


State 149

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements . ENDLOOP

    ENDLOOP  shift, and go to state 150


State 150

   13 Statement: FOR Var ASSIGN NUMBER SEMICOLON BoolExpr SEMICOLON Var ASSIGN Expression BEGINLOOP Statements ENDLOOP .

    $default  reduce using rule 13 (Statement)
